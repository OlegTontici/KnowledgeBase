<UserControl x:Class="KnowledgeBase.SmartThoughtsEditor.SmartThoughtsEditorControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:KnowledgeBase.SmartThoughtsEditor"
             xmlns:converters="clr-namespace:KnowledgeBase.Converters"
             xmlns:md="clr-namespace:Markdown.Xaml;assembly=Markdown.Xaml"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="FlowDocument" x:Key="DocumentStyle">
            <Setter Property="FontFamily"
                Value="Calibri" />
            <Setter Property="TextAlignment"
                Value="Left" />
        </Style>

        <Style x:Key="H1Style"
               TargetType="Paragraph">
            <Setter Property="FontSize"
                    Value="42" />
            <Setter Property="Foreground"
                    Value="#ff000000" />
            <Setter Property="FontWeight"
                    Value="Light" />
        </Style>

        <Style x:Key="H2Style"
               TargetType="Paragraph">
            <Setter Property="FontSize"
                    Value="20" />
            <Setter Property="Foreground"
                    Value="#ff000000" />
            <Setter Property="FontWeight"
                    Value="Light" />
        </Style>

        <Style x:Key="H3Style"
               TargetType="Paragraph">
            <Setter Property="FontSize"
                    Value="20" />
            <Setter Property="Foreground"
                    Value="#99000000" />
            <Setter Property="FontWeight"
                    Value="Light" />
        </Style>

        <Style x:Key="H4Style"
               TargetType="Paragraph">
            <Setter Property="FontSize"
                    Value="14" />
            <Setter Property="Foreground"
                    Value="#99000000" />
            <Setter Property="FontWeight"
                    Value="Light" />
        </Style>

        <Style x:Key="LinkStyle"
               TargetType="Hyperlink">
            <Setter Property="TextDecorations"
                    Value="None" />
        </Style>

        <Style x:Key="ImageStyle"
               TargetType="Image">
            <Setter Property="RenderOptions.BitmapScalingMode"
                  Value="NearestNeighbor" />
            <Style.Triggers>
                <Trigger Property="Tag"
                       Value="imageright">
                    <Setter Property="Margin" 
                          Value="20,0,0,0" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SeparatorStyle"
             TargetType="Separator">
            <!--<Setter Property="X2"
                  Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=FlowDocumentScrollViewer}}" />
          <Setter Property="Stroke"
                  Value="#99000000" />
          <Setter Property="StrokeThickness"
                  Value="2" />-->
        </Style>

        <!-- 
         The Table's style don't seem to support border-collapse. 
         By making the ruled line width 0.5 and applying it to cell and table, 
         it looks like the ruled lines are not doubled. 
     -->
        <Style x:Key="TableStyle" TargetType="Table">
            <Setter Property="CellSpacing" Value="0"/>
            <Setter Property="BorderThickness" Value="0.5"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Style.Resources>
                <Style TargetType="TableCell">
                    <Setter Property="BorderThickness" Value="0.5"/>
                    <Setter Property="BorderBrush" Value="Gray"/>
                    <Setter Property="Padding" Value="2"/>
                </Style>
            </Style.Resources>
        </Style>
        <Style x:Key="TableHeaderStyle" TargetType="TableRowGroup">
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Background" Value="LightGray"/>
        </Style>

        <Style TargetType="ToggleButton" x:Key="IconToggleButtonStyle">
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#616161"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Border 
                        x:Name="ContentContainer"
                        CornerRadius="15" Margin="2" 
                        Background="{TemplateBinding Background}">
                            </Border>
                            <Ellipse x:Name="RippleEffect" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="#9e9e9e" Width="0" Height="0" Opacity="0.4"/>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation From="0" To="30" Storyboard.TargetName="RippleEffect" Storyboard.TargetProperty="Width" Duration="0:0:0.5">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="4"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation From="0" To="30" Storyboard.TargetName="RippleEffect" Storyboard.TargetProperty="Height" Duration="0:0:0.5">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="4"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="0.4" Storyboard.TargetName="RippleEffect" Storyboard.TargetProperty="Opacity" Duration="0:0:0">

                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>

                                </Trigger.EnterActions>
                                <Trigger.ExitActions>

                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="0" Storyboard.TargetName="RippleEffect" Storyboard.TargetProperty="Opacity" Duration="0:0:0.3">

                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="#e0e0e0" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter Property="Foreground" Value="#db0f16"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="IconButtonStyle">
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#616161"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border 
                        x:Name="ContentContainer"
                        CornerRadius="15" Margin="2" 
                        Background="{TemplateBinding Background}">
                            </Border>
                            <Ellipse x:Name="RippleEffect" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="#9e9e9e" Width="0" Height="0" Opacity="0.4"/>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation From="0" To="30" Storyboard.TargetName="RippleEffect" Storyboard.TargetProperty="Width" Duration="0:0:0.5">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="4"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation From="0" To="30" Storyboard.TargetName="RippleEffect" Storyboard.TargetProperty="Height" Duration="0:0:0.5">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="4"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="0.4" Storyboard.TargetName="RippleEffect" Storyboard.TargetProperty="Opacity" Duration="0:0:0">

                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>

                                </Trigger.EnterActions>
                                <Trigger.ExitActions>

                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="0" Storyboard.TargetName="RippleEffect" Storyboard.TargetProperty="Opacity" Duration="0:0:0.3">

                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="#e0e0e0" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter Property="Foreground" Value="#db0f16"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>        

        <md:Markdown x:Key="Markdown"
                        DocumentStyle="{StaticResource DocumentStyle}"
                        Heading1Style="{StaticResource H1Style}"
                        Heading2Style="{StaticResource H2Style}"
                        Heading3Style="{StaticResource H3Style}"
                        Heading4Style="{StaticResource H4Style}"
                        LinkStyle="{StaticResource LinkStyle}"
                        ImageStyle="{StaticResource ImageStyle}"
                        SeparatorStyle="{StaticResource SeparatorStyle}"
                        TableStyle="{StaticResource TableStyle}"
                        TableHeaderStyle="{StaticResource TableHeaderStyle}"
                        AssetPathRoot="{x:Static system:Environment.CurrentDirectory}"/>

        <md:TextToFlowDocumentConverter x:Key="TextToFlowDocumentConverter" 
                                           Markdown="{StaticResource Markdown}"/>

        <converters:TagNameToColorConverter x:Key="TagNameToColorConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <ToggleButton Width="30" Height="30" Margin="5" x:Name="EditPreviewToggle" HorizontalAlignment="Center" Grid.ColumnSpan="2" Click="EditPreviewToggle_Click">
            <ToggleButton.Style>
                <Style TargetType="ToggleButton" BasedOn="{StaticResource IconToggleButtonStyle}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <Rectangle Width="14" Height="14">
                                        <Rectangle.Fill>
                                            <VisualBrush>
                                                <VisualBrush.Visual>
                                                    <Canvas>
                                                        <Path Fill="Black" Data="M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z" />
                                                    </Canvas>
                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <Rectangle Width="22" Height="14">
                                        <Rectangle.Fill>
                                            <VisualBrush>
                                                <VisualBrush.Visual>
                                                    <Canvas>
                                                        <Path Fill="Black" Data="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z" />
                                                    </Canvas>
                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>
        <Button Width="30" Height="30" Grid.ColumnSpan="2" HorizontalAlignment="Right" Margin="5" Style="{StaticResource IconButtonStyle}" Command="{Binding CloseSmartThoughtsEditorControlCommand}">
            <Rectangle Width="14" Height="14">
                <Rectangle.Fill>
                    <VisualBrush>
                        <VisualBrush.Visual>
                            <Canvas>
                                <Path Fill="Black" Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />
                            </Canvas>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Button>
        
        
        <Grid Grid.Row="1" Grid.Column="0" x:Name="EditSourceContainer" Width="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Vertical" Margin="5">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Title:" FontWeight="SemiBold" FontSize="16"/>
                    <TextBox HorizontalAlignment="Stretch" Height="20" Margin="0,4,0,0" TextWrapping="Wrap" BorderThickness="0,0,0,1" Text="{Binding SmartThoughtUnderEdit.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="0,10,0,0">
                    <TextBlock Text="Description:" FontWeight="SemiBold" FontSize="16"/>
                    <TextBox HorizontalAlignment="Stretch" Height="Auto" Margin="0,4,0,0" TextWrapping="Wrap" AcceptsReturn="True" BorderThickness="0,0,0,1" Text="{Binding SmartThoughtUnderEdit.Preview , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="0,10,0,0">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Tags:" FontWeight="SemiBold" FontSize="16" VerticalAlignment="Center"/>
                        <Button Width="30" Height="30" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.ColumnSpan="2" Style="{StaticResource IconButtonStyle}" Command="{Binding EditSmartThoughtTags}">
                            <Rectangle Width="14" Height="14">
                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Canvas>
                                                <Path Fill="Black" Data="M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z" />
                                            </Canvas>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Button>
                    </StackPanel>
                    <ItemsControl ItemsSource="{Binding SmartThoughtUnderEdit.Tags}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button Background="{Binding Converter={StaticResource TagNameToColorConverter}}" Margin="5" BorderBrush="Transparent" BorderThickness="0">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <Border CornerRadius="3" Background="{TemplateBinding Background}" x:Name="ButtonBorder">
                                                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                    <TextBlock Text="{Binding}" Margin="4,0,4,0"/>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>

                </StackPanel>
            </StackPanel>
            <TextBlock Text="Content:" FontWeight="SemiBold" FontSize="16"  Grid.Row="1" Margin="5,10,0,0" />
            <TextBox x:Name="editSource"    
                 Grid.Row="1"
                 VerticalAlignment="Stretch"
                 HorizontalAlignment="Stretch"
                 TextWrapping="Wrap"
                 AcceptsReturn="True"
                 Margin="5,34,5,4" 
                 BorderThickness="1"
                 VerticalScrollBarVisibility="Auto" FontFamily="Consolas" Text="{Binding SmartThoughtUnderEdit.FormattedContent, Mode=TwoWay}">
            </TextBox>
        </Grid>       

        <FlowDocumentScrollViewer Grid.Row="1"
                                  Grid.Column="1"
                                  VerticalAlignment="Stretch"
                                  HorizontalAlignment="Stretch"
                                  VerticalScrollBarVisibility="Auto"
                                  Margin="5"
                                  Document="{Binding ElementName=editSource, Path=Text, Converter={StaticResource TextToFlowDocumentConverter}}" />

    </Grid>
</UserControl>
